A = -A3_16
B = +99_10

|A| = 010110011_2C2
A = 1011
3 = 0011
A = -|A| = 101001101_2C2

|B| = 01100111_2C2
99 1
49 1
24 1
12 0
06 0
03 1
01 1
00
B = |B| = 01100111_2C2


A + B (estendo B in segno B = 001100111_2C2
...........
...1..1111.
..101001101+
..001100111=
..---------
..110110100

operandi discordi: non si verifica overflow

-B = 110011001
A - B = A + -B
.1....1..1....
..101001101+
..110011001=
..---------
..011100110

si verifica overflow: operandi negativi e risultato positivo




#################################################################################


#define MAXLENNOME 30
#define MAXLENRIGO 80
#define START 'A'
#define END 'Z'
int main(int argc, char* argv[])
{
  FILE * fp;
  char nome[MAXLEN + 1];
  char rigo[MAXLENRIGO + 1];

  scanf("%s", nome);
  fp = fopen(nome, "r");
  if (fp) {
    while (fgets(rigo, MAXLENRIGO, fp) != EOF)
      if(rigo[0] >= START && rigo[0] <= END)
        printf("%s", rigo);
    fclose(fp);
  } else
    printf("errore apertura file");
  return 0;
}

###################################################################################

#define START 0;
int checkisbn(char isbn[])
{
  int i, j;
  int somma, sommasomme;
  int * seq;

  for(i = 0; i < len; i++) {
    somma = seq[0] - START;
    for(j = 0; j < i; j++) {
        somma += seq[j] - START;
      }
    sommasomme += somma;
    }
  }
  return !(sommasomme % 11);
}

#####################################################################################

int checkcolonna(int * mat, int nr, int nc)
{
  int index, diff;
  int maxdiff;
  int mindiff;
  int i, j, k;
 
  for(i = 0; i < nr; i++) {
      for(k = 0; k < nr; k++) {
        diff = (mat[i][0] - mat[k][0]);
        if(diff > maxdiff)
          maxdiff = diff;
      }
    }
  mindiff = maxdiff;
  index = j;
  for(j = 1; j < nc; j++) {
    maxdiff = 0;
    for(i = 0; i < nr; i++) {
      for(k = 0; k < nr; k++) {
        diff = (mat[i][j] - mat[k][j]);
        if(diff > maxdiff)
          maxdiff = diff;
      }
    }
    if(maxdiff < mindiff) {
      mindiff = maxdiff;
      index = j;
    }
  }
  return index;
}

##################################################################################


typedef struct elem_s {
  int info;
  struct elem_s * next;
}list_t1

typedef struct elem_s {
  int info;
  int occ;
  struct elem_s * next;
}list_t2

void checkliste(list_t1 * h1, list_t2 h2)
{
  list_t1 * p1;
  list_t2 * p2;
  int cont;

  p2 = h2;
  p1 = h1;
  while (p2) {
    cont = 0;
    while (p1) {
      if(p2->info == p1->info)
        cont++;
      p1 = p1->next;
    }
    p2->occ = cont;
    p2 = p2->next;
  }
  h2 = del(h2, 0);
}