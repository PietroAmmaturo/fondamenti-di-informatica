A = -35_10
B = -28_10

|A| = 0100011_2C2
35 1
17 1
08 0
04 0
02 0
01 1
00
A = -|A| = 1011101_2C2

|B| = 011100_2C2
28 0
14 0
07 1
03 1
01 1
00
B = 100100_2C2

estendo in segno B = 1100100_2C2
A + B
..............
.11111........
..1011101+
..1100100=
..-------
..1000001

non si verifica overflow; operandi negativi e risultato negativo

-B = |B| = 0011100

A + -B
..........
....11....
..1011101+
..0011100=
..-------
..1111001

non si verifica verflow: operandi discordi

#######################################################################


int contaelementi(char s[])
{
  int cont;
  int i;

  cont = 0;
  for(i = 0; s[i] != '\0'; i++)
    if(s[i] == SEP && s[i + 1] != '\0')
      cont++;
  return cont;
}

######################################################






char * reverse(char s[])
{
  char * r;
  int len, i;

  len = strnlen(s);
  if(r = malloc(sizeof(char) * (len + 1)))
    for(i = 0; i < len; i++) {
      *(r + i) = s[len - i - 1];
    *(r + i) = '\0';
  else
    printf("errore malloc");
  return r;
}

#########################################################

int FileVuoto(char nome[], char estensione[])
{
  char * fullname;
  int lenn, lene, len, i;
  FILE * fp;
  char c;

  lenn = strlen(nome);
  lene = strlen(estensione);
  len = lenn + lene;
  if(fullname = malloc(sizeof(char) * (len + 1))) {
    for(i = 0; i < lene; i++)
      *(fullname + i) = estensione[i];
    for(i = 0; i <= lenn; i++)
      *(fullname + i + lene) = nome[i];
  }
  if(fp = fopen(fullname, "r")) {
    fscanf(fp, "%c", &c);
    if(feof(fp))
      ris = 1;
    else
      ris = 0;
    fclose(fp);
  } else
    printf("errore apertura file");
  return ris;
}








































